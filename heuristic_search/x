2,3c2,3
< program that creates a dict. representation of a tree from a data file
< See make_tree for format
---
> make_tree is a python program that creates a dict rep. of a tree from a data
> file
7,15c7,14
< #iterative version of depth_first, pre-order traversal
< 
< def depth_first(tree, value, start):
<     visited = [] #traversal list to eliminate cycles
<     traverse = [] #traversal list with nodes and values
<     stack = [start] #stack operations allow for depth-first search
<     while stack: #returns true if list has items, false otherwise
<         node = stack.pop()
<         if node not in visited: #have we been here before
---
> #iterative version of breadth_first search
> def breadth_first(tree,value,start):
>     visited = []
>     traverse = []
>     queue = [start]
>     while queue: #returns true if list has items, false otherwise
>         node = queue.pop(0) #dequeue
>         if node not in visited:
18c17
<             
---
> 
21d19
<             #children.reverse() #so we can push
24c22
<                     stack.append(child)
---
>                     queue.append(child)       
26,27c24
< 
<         
---
>  
31c28
<     print depth_first(tree_dict, value_dict,'A')
---
>     print breadth_first(tree_dict,value_dict,'A')
